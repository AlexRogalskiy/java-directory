// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aserto/directory/importer/v2/importer.proto

package com.aserto.directory.importer.v2;

/**
 * Protobuf type {@code aserto.directory.importer.v2.ImportResponse}
 */
public final class ImportResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:aserto.directory.importer.v2.ImportResponse)
    ImportResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ImportResponse.newBuilder() to construct.
  private ImportResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ImportResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ImportResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.aserto.directory.importer.v2.ImporterProto.internal_static_aserto_directory_importer_v2_ImportResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.aserto.directory.importer.v2.ImporterProto.internal_static_aserto_directory_importer_v2_ImportResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.aserto.directory.importer.v2.ImportResponse.class, com.aserto.directory.importer.v2.ImportResponse.Builder.class);
  }

  public static final int OBJECT_TYPE_FIELD_NUMBER = 1;
  private com.aserto.directory.importer.v2.ImportCounter objectType_;
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
   * @return Whether the objectType field is set.
   */
  @java.lang.Override
  public boolean hasObjectType() {
    return objectType_ != null;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
   * @return The objectType.
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounter getObjectType() {
    return objectType_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : objectType_;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounterOrBuilder getObjectTypeOrBuilder() {
    return getObjectType();
  }

  public static final int PERMISSION_FIELD_NUMBER = 2;
  private com.aserto.directory.importer.v2.ImportCounter permission_;
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
   * @return Whether the permission field is set.
   */
  @java.lang.Override
  public boolean hasPermission() {
    return permission_ != null;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
   * @return The permission.
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounter getPermission() {
    return permission_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : permission_;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounterOrBuilder getPermissionOrBuilder() {
    return getPermission();
  }

  public static final int RELATION_TYPE_FIELD_NUMBER = 3;
  private com.aserto.directory.importer.v2.ImportCounter relationType_;
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
   * @return Whether the relationType field is set.
   */
  @java.lang.Override
  public boolean hasRelationType() {
    return relationType_ != null;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
   * @return The relationType.
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounter getRelationType() {
    return relationType_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : relationType_;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounterOrBuilder getRelationTypeOrBuilder() {
    return getRelationType();
  }

  public static final int OBJECT_FIELD_NUMBER = 4;
  private com.aserto.directory.importer.v2.ImportCounter object_;
  /**
   * <pre>
   * object import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
   * @return Whether the object field is set.
   */
  @java.lang.Override
  public boolean hasObject() {
    return object_ != null;
  }
  /**
   * <pre>
   * object import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
   * @return The object.
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounter getObject() {
    return object_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : object_;
  }
  /**
   * <pre>
   * object import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounterOrBuilder getObjectOrBuilder() {
    return getObject();
  }

  public static final int RELATION_FIELD_NUMBER = 5;
  private com.aserto.directory.importer.v2.ImportCounter relation_;
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
   * @return Whether the relation field is set.
   */
  @java.lang.Override
  public boolean hasRelation() {
    return relation_ != null;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
   * @return The relation.
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounter getRelation() {
    return relation_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : relation_;
  }
  /**
   * <pre>
   * object_type import counter
   * </pre>
   *
   * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
   */
  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportCounterOrBuilder getRelationOrBuilder() {
    return getRelation();
  }

  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.aserto.directory.importer.v2.ImportResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.aserto.directory.importer.v2.ImportResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code aserto.directory.importer.v2.ImportResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:aserto.directory.importer.v2.ImportResponse)
      com.aserto.directory.importer.v2.ImportResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aserto.directory.importer.v2.ImporterProto.internal_static_aserto_directory_importer_v2_ImportResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aserto.directory.importer.v2.ImporterProto.internal_static_aserto_directory_importer_v2_ImportResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aserto.directory.importer.v2.ImportResponse.class, com.aserto.directory.importer.v2.ImportResponse.Builder.class);
    }

    // Construct using com.aserto.directory.importer.v2.ImportResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (objectTypeBuilder_ == null) {
        objectType_ = null;
      } else {
        objectType_ = null;
        objectTypeBuilder_ = null;
      }
      if (permissionBuilder_ == null) {
        permission_ = null;
      } else {
        permission_ = null;
        permissionBuilder_ = null;
      }
      if (relationTypeBuilder_ == null) {
        relationType_ = null;
      } else {
        relationType_ = null;
        relationTypeBuilder_ = null;
      }
      if (objectBuilder_ == null) {
        object_ = null;
      } else {
        object_ = null;
        objectBuilder_ = null;
      }
      if (relationBuilder_ == null) {
        relation_ = null;
      } else {
        relation_ = null;
        relationBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.aserto.directory.importer.v2.ImporterProto.internal_static_aserto_directory_importer_v2_ImportResponse_descriptor;
    }

    @java.lang.Override
    public com.aserto.directory.importer.v2.ImportResponse getDefaultInstanceForType() {
      return com.aserto.directory.importer.v2.ImportResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.aserto.directory.importer.v2.ImportResponse build() {
      com.aserto.directory.importer.v2.ImportResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.aserto.directory.importer.v2.ImportResponse buildPartial() {
      com.aserto.directory.importer.v2.ImportResponse result = new com.aserto.directory.importer.v2.ImportResponse(this);
      if (objectTypeBuilder_ == null) {
        result.objectType_ = objectType_;
      } else {
        result.objectType_ = objectTypeBuilder_.build();
      }
      if (permissionBuilder_ == null) {
        result.permission_ = permission_;
      } else {
        result.permission_ = permissionBuilder_.build();
      }
      if (relationTypeBuilder_ == null) {
        result.relationType_ = relationType_;
      } else {
        result.relationType_ = relationTypeBuilder_.build();
      }
      if (objectBuilder_ == null) {
        result.object_ = object_;
      } else {
        result.object_ = objectBuilder_.build();
      }
      if (relationBuilder_ == null) {
        result.relation_ = relation_;
      } else {
        result.relation_ = relationBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    private com.aserto.directory.importer.v2.ImportCounter objectType_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> objectTypeBuilder_;
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     * @return Whether the objectType field is set.
     */
    public boolean hasObjectType() {
      return objectTypeBuilder_ != null || objectType_ != null;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     * @return The objectType.
     */
    public com.aserto.directory.importer.v2.ImportCounter getObjectType() {
      if (objectTypeBuilder_ == null) {
        return objectType_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : objectType_;
      } else {
        return objectTypeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     */
    public Builder setObjectType(com.aserto.directory.importer.v2.ImportCounter value) {
      if (objectTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        objectType_ = value;
        onChanged();
      } else {
        objectTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     */
    public Builder setObjectType(
        com.aserto.directory.importer.v2.ImportCounter.Builder builderForValue) {
      if (objectTypeBuilder_ == null) {
        objectType_ = builderForValue.build();
        onChanged();
      } else {
        objectTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     */
    public Builder mergeObjectType(com.aserto.directory.importer.v2.ImportCounter value) {
      if (objectTypeBuilder_ == null) {
        if (objectType_ != null) {
          objectType_ =
            com.aserto.directory.importer.v2.ImportCounter.newBuilder(objectType_).mergeFrom(value).buildPartial();
        } else {
          objectType_ = value;
        }
        onChanged();
      } else {
        objectTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     */
    public Builder clearObjectType() {
      if (objectTypeBuilder_ == null) {
        objectType_ = null;
        onChanged();
      } else {
        objectType_ = null;
        objectTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounter.Builder getObjectTypeBuilder() {
      
      onChanged();
      return getObjectTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounterOrBuilder getObjectTypeOrBuilder() {
      if (objectTypeBuilder_ != null) {
        return objectTypeBuilder_.getMessageOrBuilder();
      } else {
        return objectType_ == null ?
            com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : objectType_;
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object_type = 1 [json_name = "objectType"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> 
        getObjectTypeFieldBuilder() {
      if (objectTypeBuilder_ == null) {
        objectTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder>(
                getObjectType(),
                getParentForChildren(),
                isClean());
        objectType_ = null;
      }
      return objectTypeBuilder_;
    }

    private com.aserto.directory.importer.v2.ImportCounter permission_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> permissionBuilder_;
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     * @return Whether the permission field is set.
     */
    public boolean hasPermission() {
      return permissionBuilder_ != null || permission_ != null;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     * @return The permission.
     */
    public com.aserto.directory.importer.v2.ImportCounter getPermission() {
      if (permissionBuilder_ == null) {
        return permission_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : permission_;
      } else {
        return permissionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     */
    public Builder setPermission(com.aserto.directory.importer.v2.ImportCounter value) {
      if (permissionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        permission_ = value;
        onChanged();
      } else {
        permissionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     */
    public Builder setPermission(
        com.aserto.directory.importer.v2.ImportCounter.Builder builderForValue) {
      if (permissionBuilder_ == null) {
        permission_ = builderForValue.build();
        onChanged();
      } else {
        permissionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     */
    public Builder mergePermission(com.aserto.directory.importer.v2.ImportCounter value) {
      if (permissionBuilder_ == null) {
        if (permission_ != null) {
          permission_ =
            com.aserto.directory.importer.v2.ImportCounter.newBuilder(permission_).mergeFrom(value).buildPartial();
        } else {
          permission_ = value;
        }
        onChanged();
      } else {
        permissionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     */
    public Builder clearPermission() {
      if (permissionBuilder_ == null) {
        permission_ = null;
        onChanged();
      } else {
        permission_ = null;
        permissionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounter.Builder getPermissionBuilder() {
      
      onChanged();
      return getPermissionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounterOrBuilder getPermissionOrBuilder() {
      if (permissionBuilder_ != null) {
        return permissionBuilder_.getMessageOrBuilder();
      } else {
        return permission_ == null ?
            com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : permission_;
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter permission = 2 [json_name = "permission"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> 
        getPermissionFieldBuilder() {
      if (permissionBuilder_ == null) {
        permissionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder>(
                getPermission(),
                getParentForChildren(),
                isClean());
        permission_ = null;
      }
      return permissionBuilder_;
    }

    private com.aserto.directory.importer.v2.ImportCounter relationType_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> relationTypeBuilder_;
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     * @return Whether the relationType field is set.
     */
    public boolean hasRelationType() {
      return relationTypeBuilder_ != null || relationType_ != null;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     * @return The relationType.
     */
    public com.aserto.directory.importer.v2.ImportCounter getRelationType() {
      if (relationTypeBuilder_ == null) {
        return relationType_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : relationType_;
      } else {
        return relationTypeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     */
    public Builder setRelationType(com.aserto.directory.importer.v2.ImportCounter value) {
      if (relationTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        relationType_ = value;
        onChanged();
      } else {
        relationTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     */
    public Builder setRelationType(
        com.aserto.directory.importer.v2.ImportCounter.Builder builderForValue) {
      if (relationTypeBuilder_ == null) {
        relationType_ = builderForValue.build();
        onChanged();
      } else {
        relationTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     */
    public Builder mergeRelationType(com.aserto.directory.importer.v2.ImportCounter value) {
      if (relationTypeBuilder_ == null) {
        if (relationType_ != null) {
          relationType_ =
            com.aserto.directory.importer.v2.ImportCounter.newBuilder(relationType_).mergeFrom(value).buildPartial();
        } else {
          relationType_ = value;
        }
        onChanged();
      } else {
        relationTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     */
    public Builder clearRelationType() {
      if (relationTypeBuilder_ == null) {
        relationType_ = null;
        onChanged();
      } else {
        relationType_ = null;
        relationTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounter.Builder getRelationTypeBuilder() {
      
      onChanged();
      return getRelationTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounterOrBuilder getRelationTypeOrBuilder() {
      if (relationTypeBuilder_ != null) {
        return relationTypeBuilder_.getMessageOrBuilder();
      } else {
        return relationType_ == null ?
            com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : relationType_;
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation_type = 3 [json_name = "relationType"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> 
        getRelationTypeFieldBuilder() {
      if (relationTypeBuilder_ == null) {
        relationTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder>(
                getRelationType(),
                getParentForChildren(),
                isClean());
        relationType_ = null;
      }
      return relationTypeBuilder_;
    }

    private com.aserto.directory.importer.v2.ImportCounter object_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> objectBuilder_;
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     * @return Whether the object field is set.
     */
    public boolean hasObject() {
      return objectBuilder_ != null || object_ != null;
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     * @return The object.
     */
    public com.aserto.directory.importer.v2.ImportCounter getObject() {
      if (objectBuilder_ == null) {
        return object_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : object_;
      } else {
        return objectBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     */
    public Builder setObject(com.aserto.directory.importer.v2.ImportCounter value) {
      if (objectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        object_ = value;
        onChanged();
      } else {
        objectBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     */
    public Builder setObject(
        com.aserto.directory.importer.v2.ImportCounter.Builder builderForValue) {
      if (objectBuilder_ == null) {
        object_ = builderForValue.build();
        onChanged();
      } else {
        objectBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     */
    public Builder mergeObject(com.aserto.directory.importer.v2.ImportCounter value) {
      if (objectBuilder_ == null) {
        if (object_ != null) {
          object_ =
            com.aserto.directory.importer.v2.ImportCounter.newBuilder(object_).mergeFrom(value).buildPartial();
        } else {
          object_ = value;
        }
        onChanged();
      } else {
        objectBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     */
    public Builder clearObject() {
      if (objectBuilder_ == null) {
        object_ = null;
        onChanged();
      } else {
        object_ = null;
        objectBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounter.Builder getObjectBuilder() {
      
      onChanged();
      return getObjectFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounterOrBuilder getObjectOrBuilder() {
      if (objectBuilder_ != null) {
        return objectBuilder_.getMessageOrBuilder();
      } else {
        return object_ == null ?
            com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : object_;
      }
    }
    /**
     * <pre>
     * object import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter object = 4 [json_name = "object"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> 
        getObjectFieldBuilder() {
      if (objectBuilder_ == null) {
        objectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder>(
                getObject(),
                getParentForChildren(),
                isClean());
        object_ = null;
      }
      return objectBuilder_;
    }

    private com.aserto.directory.importer.v2.ImportCounter relation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> relationBuilder_;
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     * @return Whether the relation field is set.
     */
    public boolean hasRelation() {
      return relationBuilder_ != null || relation_ != null;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     * @return The relation.
     */
    public com.aserto.directory.importer.v2.ImportCounter getRelation() {
      if (relationBuilder_ == null) {
        return relation_ == null ? com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : relation_;
      } else {
        return relationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     */
    public Builder setRelation(com.aserto.directory.importer.v2.ImportCounter value) {
      if (relationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        relation_ = value;
        onChanged();
      } else {
        relationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     */
    public Builder setRelation(
        com.aserto.directory.importer.v2.ImportCounter.Builder builderForValue) {
      if (relationBuilder_ == null) {
        relation_ = builderForValue.build();
        onChanged();
      } else {
        relationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     */
    public Builder mergeRelation(com.aserto.directory.importer.v2.ImportCounter value) {
      if (relationBuilder_ == null) {
        if (relation_ != null) {
          relation_ =
            com.aserto.directory.importer.v2.ImportCounter.newBuilder(relation_).mergeFrom(value).buildPartial();
        } else {
          relation_ = value;
        }
        onChanged();
      } else {
        relationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     */
    public Builder clearRelation() {
      if (relationBuilder_ == null) {
        relation_ = null;
        onChanged();
      } else {
        relation_ = null;
        relationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounter.Builder getRelationBuilder() {
      
      onChanged();
      return getRelationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     */
    public com.aserto.directory.importer.v2.ImportCounterOrBuilder getRelationOrBuilder() {
      if (relationBuilder_ != null) {
        return relationBuilder_.getMessageOrBuilder();
      } else {
        return relation_ == null ?
            com.aserto.directory.importer.v2.ImportCounter.getDefaultInstance() : relation_;
      }
    }
    /**
     * <pre>
     * object_type import counter
     * </pre>
     *
     * <code>.aserto.directory.importer.v2.ImportCounter relation = 5 [json_name = "relation"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder> 
        getRelationFieldBuilder() {
      if (relationBuilder_ == null) {
        relationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.aserto.directory.importer.v2.ImportCounter, com.aserto.directory.importer.v2.ImportCounter.Builder, com.aserto.directory.importer.v2.ImportCounterOrBuilder>(
                getRelation(),
                getParentForChildren(),
                isClean());
        relation_ = null;
      }
      return relationBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:aserto.directory.importer.v2.ImportResponse)
  }

  // @@protoc_insertion_point(class_scope:aserto.directory.importer.v2.ImportResponse)
  private static final com.aserto.directory.importer.v2.ImportResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.aserto.directory.importer.v2.ImportResponse();
  }

  public static com.aserto.directory.importer.v2.ImportResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImportResponse>
      PARSER = new com.google.protobuf.AbstractParser<ImportResponse>() {
    @java.lang.Override
    public ImportResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ImportResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImportResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.aserto.directory.importer.v2.ImportResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

